<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pm.dao.BlogArticleMapper" >
  <resultMap id="BaseResultMap" type="com.pm.entity.BlogArticle" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="view" property="view" jdbcType="INTEGER" />
    <result column="cover" property="cover" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="prove" property="prove" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, title, description, view, cover, content, type_id, date, prove
  </sql>
  
  <select id="getBlogById" parameterType="java.lang.Integer" resultType="com.pm.entity.BlogArticle">
  	select * 
  	from blog_article 
  	where id = #{id, jdbcType = INTEGER}
  </select>
  
  <select id="getAll" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List"/>
  	from blog_article
  	order by date desc
  </select>
  
 <select id="getNextBlogByDate" resultType="com.pm.entity.BlogArticle">
  	select *
  	from blog_article 
  	where date &gt; #{date, jdbcType=TIMESTAMP} having Min(date)
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from blog_article
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="getAllByTypeId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
  	select
  	<include refid="Base_Column_List"/>
  	from blog_article
  	where type_id = #{typeId, jdbcType=INTEGER}
  	order by date desc
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog_article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.pm.entity.BlogArticle" >
    insert into blog_article (id, title, description, 
      view, cover, content, 
      type_id, date)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{view,jdbcType=INTEGER}, #{cover,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{typeId,jdbcType=INTEGER}, #{date,jdbcType=TIMESTAMP})
  </insert>
  
  <insert id="insertSelective" parameterType="com.pm.entity.BlogArticle" >
    insert into blog_article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="view != null" >
        view,
      </if>
      <if test="cover != null" >
        cover,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="date != null" >
        date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="view != null" >
        #{view,jdbcType=INTEGER},
      </if>
      <if test="cover != null" >
        #{cover,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="data != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  
  <update id="updateView" parameterType="com.pm.entity.BlogArticle">
  	update blog_article
  	set 
  		view = #{view, jdbcType=INTEGER} 
  	where id = #{id, jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.pm.entity.BlogArticle" >
    update blog_article
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="view != null" >
        view = #{view,jdbcType=INTEGER},
      </if>
      <if test="cover != null" >
        cover = #{cover,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="data != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.pm.entity.BlogArticle" >
    update blog_article
    set title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      view = #{view,jdbcType=INTEGER},
      cover = #{cover,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      date = #{date,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>