<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.pm.dao.CommentMapper" >
  <resultMap id="BaseResultMap" type="com.pm.entity.Comment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="comment" property="comment" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="TIMESTAMP" />
    <result column="critic" property="critic" jdbcType="VARCHAR" />
    <result column="critic_id" property="criticId" jdbcType="INTEGER" />
    <result column="blog_id" property="blogId" jdbcType="INTEGER" />
    <result column="like_count" property="likeCount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, comment, date, critic, critic_id, blog_id, like_count
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from pm_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from pm_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.pm.entity.Comment" >
    insert into pm_comment (id, comment, date, 
      critic, critic_id, blog_id, 
      like_count)
    values (#{id,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, 
      #{critic,jdbcType=VARCHAR}, #{criticId,jdbcType=INTEGER}, #{blogId,jdbcType=INTEGER}, 
      #{likeCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pm.entity.Comment" >
    insert into pm_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="comment != null" >
        comment,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="critic != null" >
        critic,
      </if>
      <if test="criticId != null" >
        critic_id,
      </if>
      <if test="blogId != null" >
        blog_id,
      </if>
      <if test="likeCount != null" >
        like_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="comment != null" >
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="critic != null" >
        #{critic,jdbcType=VARCHAR},
      </if>
      <if test="criticId != null" >
        #{criticId,jdbcType=INTEGER},
      </if>
      <if test="blogId != null" >
        #{blogId,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null" >
        #{likeCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.pm.entity.Comment" >
    update pm_comment
    <set >
      <if test="comment != null" >
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=TIMESTAMP},
      </if>
      <if test="critic != null" >
        critic = #{critic,jdbcType=VARCHAR},
      </if>
      <if test="criticId != null" >
        critic_id = #{criticId,jdbcType=INTEGER},
      </if>
      <if test="blogId != null" >
        blog_id = #{blogId,jdbcType=INTEGER},
      </if>
      <if test="likeCount != null" >
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pm.entity.Comment" >
    update pm_comment
    set comment = #{comment,jdbcType=VARCHAR},
      date = #{date,jdbcType=TIMESTAMP},
      critic = #{critic,jdbcType=VARCHAR},
      critic_id = #{criticId,jdbcType=INTEGER},
      blog_id = #{blogId,jdbcType=INTEGER},
      like_count = #{likeCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>